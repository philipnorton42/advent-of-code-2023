<?php

namespace Philipnorton42\AdventOfCode2023\Test;

require './10/functions.php';

use PHPUnit\Framework\TestCase;

class TenTest extends TestCase {

  /**
   * @dataProvider extractPipeDataDataProvider
   */
  public function testExtractPipeData($string, $expectedResult) {
    $result = extractPipeData($string);
    $this->assertEquals($expectedResult, $result);
  }

  public static function extractPipeDataDataProvider() {
    $output = [];

    $inputData1 = <<<EOD
-L|F7
7S-7|
L|7||
-L-J|
L|-JF
EOD;

    $output[] = [
      $inputData1,
      [
        ['-','L','|','F','7'],
        ['7','S','-','7','|'],
        ['L','|','7','|','|'],
        ['-','L','-','J','|'],
        ['L','|','-','J','F'],
      ],
    ];

    $inputData2 = <<<EOD
7.F7.
.FJ|7
SJLL7
|F--J
LJ.LJ
EOD;

    $output[] = [
      $inputData2,
      [
        ['7','.','F','7','.'],
        ['.','F','J','|','7'],
        ['S','J','L','L','7'],
        ['|','F','-','-','J'],
        ['L','J','.','L','J'],
      ],
    ];

    return $output;
  }

  /**
   * @dataProvider getHalfLoopLengthDataProvider
   */
  public function testGetHalfLoopLength($string, $expectedResult) {
    $result = getHalfLoopLength($string);
    $this->assertEquals($expectedResult, $result);
  }

  public static function getHalfLoopLengthDataProvider() {
    $output = [];

    $output[] = [
      [
        ['-','L','|','F','7'],
        ['7','S','-','7','|'],
        ['L','|','7','|','|'],
        ['-','L','-','J','|'],
        ['L','|','-','J','F'],
      ],
      4,
    ];

    $output[] = [
      [
        ['7','.','F','7','.'],
        ['.','F','J','|','7'],
        ['S','J','L','L','7'],
        ['|','F','-','-','J'],
        ['L','J','.','L','J'],
      ],
      8,
    ];

    return $output;
  }

  /**
   * @dataProvider findInternalVolumeDataProvider
   */
  public function testFindInternalVolume($string, $expectedResult) {
    $result = findInternalVolume($string);
    $this->assertEquals($expectedResult, $result);
  }

  public static function findInternalVolumeDataProvider() {
    $output = [];

    $output[] = [
      [
        ['.','.','.','.','.','.','.','.','.','.','.'],
        ['.','S','-','-','-','-','-','-','-','7','.'],
        ['.','|','F','-','-','-','-','-','7','|','.'],
        ['.','|','|','.','.','.','.','.','|','|','.'],
        ['.','|','|','.','.','.','.','.','|','|','.'],
        ['.','|','L','-','7','.','F','-','J','|','.'],
        ['.','|','.','.','|','.','|','.','.','|','.'],
        ['.','L','-','-','J','.','L','-','-','J','.'],
        ['.','.','.','.','.','.','.','.','.','.','.'],
      ],
      4,
    ];

    return $output;

    $output[] = [
      [
        ['.','.','.','.','.','.','.','.','.','.'],
        ['.','S','-','-','-','-','-','-','7','.'],
        ['.','|','F','-','-','-','-','7','|','.'],
        ['.','|','|','.','.','.','.','|','|','.'],
        ['.','|','|','.','.','.','.','|','|','.'],
        ['.','|','L','-','7','F','-','J','|','.'],
        ['.','|','.','.','|','|','.','.','|','.'],
        ['.','L','-','-','J','L','-','-','J','.'],
        ['.','.','.','.','.','.','.','.','.','.'],
      ],
      4,
    ];

    $output[] = [
      [
        ['.','F','-','-','-','-','7','F','7','F','7','F','7','F','-','7','.','.','.','.'],
        ['.','|','F','-','-','7','|','|','|','|','|','|','|','|','F','J','.','.','.','.'],
        ['.','|','|','.','F','J','|','|','|','|','|','|','|','|','L','7','.','.','.','.'],
        ['F','J','L','7','L','7','L','J','L','J','|','|','L','J','X','L','-','7','.','.'],
        ['L','-','-','J','.','L','7','X','X','X','L','J','S','7','F','-','7','L','7','.'],
        ['.','.','.','.','F','-','J','X','X','F','7','F','J','|','L','7','L','7','L','7'],
        ['.','.','.','.','L','7','X','F','7','|','|','L','7','|','X','L','7','L','7','|'],
        ['.','.','.','.','.','|','F','J','L','J','|','F','J','|','F','7','|','.','L','J'],
        ['.','.','.','.','F','J','L','-','7','.','|','|','.','|','|','|','|','.','.','.'],
        ['.','.','.','.','L','-','-','-','J','.','L','J','.','L','J','L','J','.','.','.'],
      ],
      8,
    ];

    $output[] = [
      [
        ['F','F','7','F','S','F','7','F','7','F','7','F','7','F','7','F','-','-','-','7'],
        ['L','|','L','J','|','|','|','|','|','|','|','|','|','|','|','|','F','-','-','J'],
        ['F','L','-','7','L','J','L','J','|','|','|','|','|','|','L','J','L','-','7','7'],
        ['F','-','-','J','F','-','-','7','|','|','L','J','L','J','I','F','7','F','J','-'],
        ['L','-','-','-','J','F','-','J','L','J','I','I','I','I','F','J','L','J','J','7'],
        ['|','F','|','F','-','J','F','-','-','-','7','I','I','I','L','7','L','|','7','|'],
        ['|','F','F','J','F','7','L','7','F','-','J','F','7','I','I','L','-','-','-','7'],
        ['7','-','L','-','J','L','7','|','|','F','7','|','L','7','F','-','7','F','7','|'],
        ['L','.','L','7','L','F','J','|','|','|','|','|','F','J','L','7','|','|','L','J'],
        ['L','7','J','L','J','L','-','J','L','J','L','J','L','-','-','J','L','J','.','L'],
      ],
      10,
    ];

    return $output;
  }
}
